"""
Настройки модуля финансовой статистики и прогноза выручки.

Как этим пользоваться:
— Меняйте значения ниже под свою витрину и правила учёта.
— Каждый параметр снабжён кратким описанием и примерами.
— Если не уверены — оставьте значения по умолчанию.
"""

# ──────────────────────────────────────────────────────────────────────────────
# Навигация и видимость раздела в админке
# ──────────────────────────────────────────────────────────────────────────────
# STATS_ANCHOR_CALLBACK — куда вернёт кнопка «Назад» из раздела статистики.
# Пример: "admin_panel:admin:1" — якорь вашего главного меню администратора.
STATS_ANCHOR_CALLBACK = "admin_panel:admin:1"

# SHOW_IN_ADMIN_PANEL — показывать ли раздел статистики в админ-панели.
# True  — раздел виден, кнопка добавляется в меню.
# False — раздел скрыт (можно вызвать только прямыми командами/коллбэками).
SHOW_IN_ADMIN_PANEL = True

# ──────────────────────────────────────────────────────────────────────────────
# Фильтры учёта подписок
# ──────────────────────────────────────────────────────────────────────────────
# EXCLUDE_TRIALS — исключать ли из расчётов «пробные/нулевые» тарифы:
# True  — тарифы с group_code='trial' ИЛИ price_rub=0 не учитываются в плане/остатке/прогнозе.
# False — учитывать вообще все тарифы.
EXCLUDE_TRIALS = True

# SKIP_FROZEN — исключать ли «замороженные» ключи (keys.is_frozen = true):
# True  — замороженные не попадают в расчёты.
# False — учитывать всех, включая замороженных.
SKIP_FROZEN = True

# Как считать «📏 Выполнено» — выбирайте то, что удобно вам:
#
# "cash"  — Факт / План.
#           Берём только реальные платежи текущего месяца. Предоплаты из прошлого месяца НЕ учитываются,
#           поэтому 1 числа процент может быть низким.
#
# "accrual" — Признано по датам продления / План.
#             Считаем выполненным в тот день, когда подписка ДОЛЖНА была продлиться (даже если оплатили заранее).
#             Предоплаты прошлого месяца попадут в текущий, но не сразу 1-го, а в день плановой истечки.
#
# "plan_vs_forecast" — (План − Прогноз) / План.
#                      Самый наглядный вариант: показывает, какая часть плана уже закрыта.
#                      Всё, что уже продлено (в т.ч. предоплачено заранее), сразу уменьшает Прогноз и засчитывается
#                      в выполненное с первого дня месяца.
COMPLETION_MODE = "plan_vs_forecast"


# ──────────────────────────────────────────────────────────────────────────────
# Вероятности продления (влияют на «Прогноз»)
# ──────────────────────────────────────────────────────────────────────────────
# RENEWAL_PROBABILITY — глобальная вероятность продления, если частные не заданы.
# Примеры:
#   None  — считать p = 1.0 (по умолчанию, если не указано иначе)
#   0.8   — считать, что продлится 80% истечек
RENEWAL_PROBABILITY: float | None = None

# PLAN_PROB_OVERRIDES — приоритетные вероятности для отдельных тарифов/групп.
# Ключ может быть:
#   — точным именем тарифа (tariffs.name), например: "1 месяц"
#   — group_code тарифа, например: "basic", "vip", "business"
#   — «корзиной» (bucket), которую модуль вычисляет по длительности: "1m" | "3m" | "12m" | "other"
# Примеры:
# PLAN_PROB_OVERRIDES = {
#     "1 месяц": 0.9,     # для тарифа с таким именем p = 0.9
#     "3m": 0.75,         # для всех «трёхмесячников» p = 0.75
#     "vip": 0.6,         # для всех тарифов с group_code="vip" p = 0.6
# }
PLAN_PROB_OVERRIDES: dict[str, float] = {}


# — DISCOVERY_FALLBACKS используйте, если у проекта нет ORM-моделей, а модуль сам
#   «находит» таблицы по именам. Здесь мы явно указываем, как называются нужные таблицы БД.
# — Если у вас кастомные имена, измените их здесь и перезапустите бота:
#     "keys"     → таблица с активными ключами/подписками (должны быть поля: tg_id, client_id, expiry_time, tariff_id, is_frozen)
#     "plans"    → тарифы (id, name, group_code, duration_days, price_rub, ...)
#     "payments" → платежи (created_at, amount, status, tg_id, ...)
DISCOVERY_FALLBACKS = {
    "tables": {
        "keys": "keys",
        "plans": "tariffs",
        "payments": "payments",
    }
}