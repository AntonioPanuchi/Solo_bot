"""
–°—Ö–µ–º—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è API Privacy-Compliant Analytics
"""

from pydantic import BaseModel, Field
from typing import Dict, List, Any, Optional
from datetime import datetime
from enum import Enum


# ========================================
# üìä –û–°–ù–û–í–ù–´–ï –°–•–ï–ú–´
# ========================================

class HealthResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è"""
    status: str
    timestamp: str
    version: str
    components: Dict[str, str]


class ErrorResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –æ–± –æ—à–∏–±–∫–µ"""
    error: str
    message: str
    timestamp: str
    request_id: Optional[str] = None


# ========================================
# üìä –ú–û–ù–ò–¢–û–†–ò–ù–ì
# ========================================

class ServerStatusResponse(BaseModel):
    """–û—Ç–≤–µ—Ç —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞"""
    server_id: str
    status: str
    health_score: float
    last_update: str
    active_connections: int
    bandwidth_usage_gb: float
    cpu_usage: float
    memory_usage: float


class PerformanceMetricsResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –º–µ—Ç—Ä–∏–∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
    status: str
    last_update: str
    response_time_ms: float
    rps: float
    error_rate: float
    health_score: float
    active_users: int


class SecurityMetricsResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –º–µ—Ç—Ä–∏–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"""
    threat_level: str
    failed_logins: int
    suspicious_ips: int
    brute_force_active: bool
    last_check: str


class BusinessMetricsResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –±–∏–∑–Ω–µ—Å-–º–µ—Ç—Ä–∏–∫"""
    status: str
    last_update: str
    total_users: int
    active_users: int
    daily_revenue: float
    monthly_revenue: float
    conversion_rate: float
    retention_rate: float


# ========================================
# üìà –ê–ù–ê–õ–ò–¢–ò–ö–ê
# ========================================

class MetricsProcessingRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–µ—Ç—Ä–∏–∫"""
    server_id: str
    timestamp: str
    metrics: Dict[str, Any]
    privacy_compliant: bool = True


class ProcessingResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–µ—Ç—Ä–∏–∫"""
    success: bool
    processed_metrics: Dict[str, Any]
    timestamp: str


class PerformanceAnalysisResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
    performance_score: float
    efficiency_metrics: Dict[str, float]
    bottlenecks: List[str]
    recommendations: List[str]


class BusinessAnalysisResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –±–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏–∑–∞"""
    revenue_metrics: Dict[str, float]
    user_metrics: Dict[str, Any]
    conversion_metrics: Dict[str, float]


# ========================================
# üìä –î–ê–®–ë–û–†–î–´
# ========================================

class RealtimeDashboardResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –¥–∞—à–±–æ—Ä–¥–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"""
    timestamp: str
    current_metrics: Dict[str, Any]
    server_status: Dict[str, Any]
    alerts: Dict[str, Any]
    performance_graphs: Dict[str, Any]
    privacy_status: str


class BusinessDashboardResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –±–∏–∑–Ω–µ—Å-–¥–∞—à–±–æ—Ä–¥–∞"""
    timestamp: str
    revenue_metrics: Dict[str, Any]
    user_metrics: Dict[str, Any]
    subscription_metrics: Dict[str, Any]
    geographic_metrics: Dict[str, Any]
    conversion_metrics: Dict[str, Any]
    privacy_status: str


class AdminDashboardResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –¥–∞—à–±–æ—Ä–¥–∞"""
    timestamp: str
    system_overview: Dict[str, Any]
    server_management: Dict[str, Any]
    user_management: Dict[str, Any]
    security_overview: Dict[str, Any]
    performance_metrics: Dict[str, Any]
    alerts_summary: Dict[str, Any]
    privacy_status: str


# ========================================
# üö® –ê–õ–ï–†–¢–´
# ========================================

class AlertSeverity(str, Enum):
    """–°–µ—Ä—å–µ–∑–Ω–æ—Å—Ç—å –∞–ª–µ—Ä—Ç–∞"""
    CRITICAL = "critical"
    WARNING = "warning"
    INFO = "info"


class AlertStatus(str, Enum):
    """–°—Ç–∞—Ç—É—Å –∞–ª–µ—Ä—Ç–∞"""
    ACTIVE = "active"
    ACKNOWLEDGED = "acknowledged"
    RESOLVED = "resolved"


class AlertResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –∞–ª–µ—Ä—Ç–∞"""
    id: str
    rule_id: str
    rule_name: str
    severity: AlertSeverity
    message: str
    timestamp: str
    status: AlertStatus
    escalation_level: int
    acknowledged: bool
    resolved: bool


class AcknowledgeRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–ª–µ—Ä—Ç–∞"""
    acknowledged_by: str


class AcknowledgeResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–ª–µ—Ä—Ç–∞"""
    success: bool
    message: str


class ResolveRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∞–ª–µ—Ä—Ç–∞"""
    resolved_by: str


class ResolveResponse(BaseModel):
    """–û—Ç–≤–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∞–ª–µ—Ä—Ç–∞"""
    success: bool
    message: str


class AlertStatisticsResponse(BaseModel):
    """–û—Ç–≤–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–ª–µ—Ä—Ç–æ–≤"""
    active_alerts: int
    total_alerts: int
    alerts_24h: int
    severity_distribution: Dict[str, int]
    resolution_rate: float
    avg_resolution_time_minutes: float


# ========================================
# üìÑ –û–¢–ß–ï–¢–´
# ========================================

class ReportType(str, Enum):
    """–¢–∏–ø –æ—Ç—á–µ—Ç–∞"""
    DAILY = "daily"
    WEEKLY = "weekly"
    MONTHLY = "monthly"
    CUSTOM = "custom"


class ReportResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –æ—Ç—á–µ—Ç–∞"""
    id: str
    name: str
    description: str
    sections: List[str]
    last_generated: Optional[str] = None


class ReportGenerationRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞"""
    report_type: ReportType
    parameters: Optional[Dict[str, Any]] = None


class ReportGenerationResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞"""
    success: bool
    report: Dict[str, Any]
    generated_at: str


# ========================================
# üîí –ü–†–ò–í–ê–¢–ù–û–°–¢–¨
# ========================================

class PrivacyComplianceResponse(BaseModel):
    """–û—Ç–≤–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏"""
    compliant: bool
    last_check: str
    privacy_mode: str
    data_anonymization: bool
    personal_data_filtering: bool


# ========================================
# üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê
# ========================================

class StatisticsOverviewResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –æ–±–∑–æ—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    total_requests: int
    success_rate: float
    average_response_time: float
    active_users: int
    system_uptime: float
    last_updated: str


# ========================================
# üîß –£–ü–†–ê–í–õ–ï–ù–ò–ï
# ========================================

class RefreshResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"""
    success: bool
    message: str
    timestamp: str


class ConfigResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    privacy_mode: str
    monitoring_enabled: bool
    alerts_enabled: bool
    dashboard_enabled: bool
    data_retention_days: int
    real_time_update_interval: int
    dashboard_refresh_interval: int


# ========================================
# üìö –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–Ø
# ========================================

class ApiDocumentationResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ API"""
    title: str
    version: str
    description: str
    endpoints: List[Dict[str, str]]
    privacy_compliance: str
    rate_limits: Dict[str, int]


# ========================================
# üîÑ –í–ï–ë–•–£–ö–ò
# ========================================

class WebhookRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å –≤–µ–±—Ö—É–∫–∞"""
    type: str
    data: Dict[str, Any]
    timestamp: str
    signature: Optional[str] = None


class WebhookResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –≤–µ–±—Ö—É–∫–∞"""
    status: str
    message: Optional[str] = None
    processed_at: str


# ========================================
# üìä –ú–ï–¢–†–ò–ö–ò –ò –ê–ù–ê–õ–ò–¢–ò–ö–ê
# ========================================

class MetricDataPoint(BaseModel):
    """–¢–æ—á–∫–∞ –¥–∞–Ω–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫–∏"""
    timestamp: str
    value: float
    tags: Optional[Dict[str, str]] = None


class MetricSeries(BaseModel):
    """–°–µ—Ä–∏—è –º–µ—Ç—Ä–∏–∫"""
    name: str
    data_points: List[MetricDataPoint]
    unit: Optional[str] = None


class AnalyticsQuery(BaseModel):
    """–ó–∞–ø—Ä–æ—Å –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
    metric_names: List[str]
    start_time: str
    end_time: str
    aggregation: Optional[str] = "avg"
    group_by: Optional[List[str]] = None


class AnalyticsResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
    query: AnalyticsQuery
    results: List[MetricSeries]
    total_points: int
    execution_time_ms: float


# ========================================
# üéØ –§–ò–õ–¨–¢–†–´ –ò –ü–û–ò–°–ö
# ========================================

class FilterCriteria(BaseModel):
    """–ö—Ä–∏—Ç–µ—Ä–∏–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏"""
    field: str
    operator: str  # eq, ne, gt, lt, gte, lte, in, not_in, contains
    value: Any


class SearchRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å –ø–æ–∏—Å–∫–∞"""
    query: str
    filters: Optional[List[FilterCriteria]] = None
    sort_by: Optional[str] = None
    sort_order: Optional[str] = "asc"
    limit: Optional[int] = 100
    offset: Optional[int] = 0


class SearchResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –ø–æ–∏—Å–∫–∞"""
    results: List[Dict[str, Any]]
    total: int
    limit: int
    offset: int
    query_time_ms: float


# ========================================
# üîî –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø
# ========================================

class NotificationChannel(str, Enum):
    """–ö–∞–Ω–∞–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    TELEGRAM = "telegram"
    EMAIL = "email"
    WEBHOOK = "webhook"
    SMS = "sms"


class NotificationRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
    channels: List[NotificationChannel]
    message: str
    severity: AlertSeverity
    recipients: Optional[List[str]] = None


class NotificationResponse(BaseModel):
    """–û—Ç–≤–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
    success: bool
    sent_channels: List[str]
    failed_channels: List[str]
    message_id: Optional[str] = None


# ========================================
# üìà –ü–†–û–ì–ù–û–ó–´ –ò –ü–†–ï–î–°–ö–ê–ó–ê–ù–ò–Ø
# ========================================

class ForecastRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å –ø—Ä–æ–≥–Ω–æ–∑–∞"""
    metric_name: str
    forecast_hours: int
    confidence_level: float = 0.95


class ForecastResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –ø—Ä–æ–≥–Ω–æ–∑–∞"""
    metric_name: str
    forecast_data: List[MetricDataPoint]
    confidence_intervals: List[Dict[str, float]]
    accuracy_score: float
    generated_at: str


# ========================================
# üîê –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–Ø –ò –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø
# ========================================

class AuthToken(BaseModel):
    """–¢–æ–∫–µ–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    access_token: str
    token_type: str = "bearer"
    expires_in: int
    scope: Optional[List[str]] = None


class AuthRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    username: str
    password: str
    client_id: Optional[str] = None


class AuthResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    success: bool
    token: Optional[AuthToken] = None
    user_info: Optional[Dict[str, Any]] = None
    message: Optional[str] = None


# ========================================
# üìä –≠–ö–°–ü–û–†–¢ –ò –ò–ú–ü–û–†–¢
# ========================================

class ExportRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å —ç–∫—Å–ø–æ—Ä—Ç–∞"""
    data_type: str
    format: str  # json, csv, xlsx, pdf
    filters: Optional[List[FilterCriteria]] = None
    date_range: Optional[Dict[str, str]] = None


class ExportResponse(BaseModel):
    """–û—Ç–≤–µ—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞"""
    success: bool
    file_url: Optional[str] = None
    file_size: Optional[int] = None
    expires_at: Optional[str] = None
    download_token: Optional[str] = None


# ========================================
# üîß –°–ò–°–¢–ï–ú–ù–´–ï –û–ü–ï–†–ê–¶–ò–ò
# ========================================

class SystemOperationRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å —Å–∏—Å—Ç–µ–º–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏"""
    operation: str  # restart, backup, maintenance, update
    parameters: Optional[Dict[str, Any]] = None
    scheduled_time: Optional[str] = None


class SystemOperationResponse(BaseModel):
    """–û—Ç–≤–µ—Ç —Å–∏—Å—Ç–µ–º–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏"""
    success: bool
    operation_id: str
    status: str
    message: str
    estimated_duration_minutes: Optional[int] = None
